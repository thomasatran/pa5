(def initList () : Tup (tuple (null Num) (null Tup)))
    (def addBeg (val : Num head : Tup) : Tup (let ((prevf (get head 1 Tup))) (update head 1 (tuple val prevf))) )
    (def addEnd (val : Num head : Tup) : Tup 
      (let ((nextf (get head 1 Tup))) 
        (if (isNull nextf)
          (update head 1 (tuple val (null Tup)))
          (addEnd val (get head 1 Tup)) 
        ) 
      )
    )
    (def getVal (index : Num head : Tup ct : Num) : Num
      (let ((holder 0))
        (if (isNull head)
          (null Num)
          (if (== index ct)
            (get head 0 Num)
            (getVal index (get head 1 Tup) (+ ct 1))
          )
        )
      )
    )
    (def createLLto (size : Num) : Tup 
      (let ((x (initList)))
        (createLLhelp size  x 0)
        x
      )
    )
    (def createLLhelp (size : Num head : Tup ct : Num) : Tup
      (let ((x 0))
        (if (== size ct )
          (update head 1 (tuple ct (null Tup)))
          (let ((dud 0))
            (update head 1 (tuple ct (null Tup)))
            (createLLhelp size (get head 1 Tup) (+ ct 1))
          )
        )
      )
    )
    (let ((x (initList)) (y (createLLto 18)) (z (tuple -99999 (null Num) (null Num) (null Num))))
      (print x)
      (addBeg 90 x)
      (addBeg 80 x)
      (addBeg 70 x)
      (addBeg 60 x)
      (addBeg 50 x)
      (print x)
      (addEnd 80 x)
      (addEnd 70 x)
      (addEnd 60 x)
      (addEnd 50 x)
      (addEnd 80 x)
      (addEnd 70 x)
      (addEnd 60 x)
      (addEnd 50 x)
      (print x)
      (print (getVal 13 x 0))
      (print y)
      (addEnd 80 y)
      (addBeg 60 y)
      (print y)
      (print (createLLto 7))
      (addBeg 89 z)
      (addBeg 192 z)
      (addEnd 499 z)
      z
    )